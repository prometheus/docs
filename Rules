#!/usr/bin/env ruby

passthrough '/static/**/*'
passthrough '/README.md'

# RSS Feed
compile '/blog/feed.*' do
    filter :erb
end

route '/blog/feed.*' do
  '/blog/feed.xml'
end

compile '/**/*' do
  filter :erb

  if item[:extension] == 'md'
    #filter :kramdown
    filter :redcarpet, options: {filter_html: true, autolink: true, no_intraemphasis: true, fenced_code_blocks: true, gh_blockcode: true, tables: true}, renderer_options: {with_toc_data: true}
    filter :add_anchors
    filter :bootstrappify
    filter :admonition
    filter :colorize_syntax, :default_colorizer => :pygmentsrb
    if item[:kind] == 'article'
      layout '/blog.*'
    else
      layout '/docs.*'
    end
  elsif item.binary?
    # donâ€™t filter binary items
  elsif item[:layout]
    layout item[:layout]
  else
    layout '/default.*'
  end
end

route '/blog{/index,}.*' do
  '/blog/index.html'
end

# Transform /blog/<YYYY>-<MM>-<DD>-<post title> to
# /blog/<YYYY>/<MM>/<DD>/<post title>.
route '/blog/**/*' do
  y, m, d, slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier).captures

  "/blog/#{y}/#{m}/#{d}/#{slug}/index.html"
end

route '/**/*' do
  if item.binary?
    # Write item with identifier /foo.dat to /foo.dat
    item.identifier.to_s
  elsif item.identifier =~ '/**/index.*'
    # Write item with identifier /foo/index.md to /foo/index.html
    item.identifier.without_ext + '.html'
  else
    # Write item with identifier /foo/bar.md to /foo/bar/index.html
    item.identifier.without_ext + '/index.html'
  end
end

layout '/**/*', :erb
